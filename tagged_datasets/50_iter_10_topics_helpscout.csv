date,url,title,contents,author,topic
2016-04-11,https://www.helpscout.net/blog/march-2016-release-notes/,Release Notes: March,"March inspired a spring cleaning of our quick win to-do list, squashing a barrage of pesky bugs and bringing a few oft-requested tweaks to Help Scout. Share a smile with customers from your signature, get a second chance on sending attachments, and move with rapid fire through your Mailbox settings with an efficient quickswitch dropdown. Add a profile image to your email signature using new image variables in our signature editor. The profile image variable picks up the avatar image from your User profile so your customers can put a face to your name. At least when it comes to attachments. Skirt the embarrassment from sending attachment-less emails with a new warning that pops up if you include the word “attach” in your reply. Navigating between Mailbox settings is now just a two-click switch with this convenient little Mailbox dropdown. Great for getting Multiple Mailboxes set up in one go, or cross-checking settings across all Mailboxes without leaving the page. Using a custom   name? That now applies to Auto-replies, keeping all of the communication in your Mailbox looking like it’s from the same, consistent place. Float your mouse over the conversation timestamps to reveal a spiffed up tooltip that displays by-the-minute what time a conversation arrived or left your Help Scout Mailbox. Help Scout on mobile now redirects like you’d expect. If you get an email notification on your mobile device and click the conversation link, the link now directly opens that conversation in the Help Scout mobile app. We made a few tweaks to message threading for group conversations, which should keep a higher percentage of emails with their rightful parent conversation. Our engineers have gone on an extermination rampage, squashing over 50 irksome bugs to smooth out your everyday Help Scout experience.",Mo McKibbin,0
2016-04-05,https://www.helpscout.net/blog/the-world-outside/,Solving Problems Outside Your Domain,"When you own a brick-and-mortar store and the street it’s on is under construction, closing up shop is not an option. It’s up to you to keep customers shopping with you, even when it’s less convenient for them to do so. Same goes for your online business. Forces outside your control—email clients not playing nicely, your customer’s IT department delaying a company-wide upgrade from Internet Explorer 8—are going to conspire and make doing business with you harder than it should be. Too often, we sweep those issues under the rug. It’s tempting to consider the problem solved if we get the customer to switch to a different browser or turn off an extension. You might just want to say, “Sorry, we can’t help you if you insist on using that crummy third-party tool that’s getting in the way.” But if you don’t want to lose business, you can’t throw your hands up and blame those external forces—you won’t win any positive word-of-mouth about your support by treating the symptom rather than the cause. It’s time to stop telling people to clear their cache or try a different browser as a first line of defense. Yes, sometimes a problem is a browser or caching issue, but it's not the customer's job to reproduce and create a bug report to prove themselves.  , ask clarifying questions if you need to, and see if you can identify the issue the customer is talking about first. When you tell a customer to clear their cookies and cache or try an alternate browser   properly investigating their issue, they may not expend the energy to follow up if the problem persists. Not only have you provided a subpar customer experience, you’ve missed the opportunity to find and squash a problem that likely affects other people. You also just brushed off a troubleshooting dialogue with a customer invested in helping you find a fix. This doesn’t just go for SaaS companies. If you have an ecommerce or eservice site and a customer has trouble placing an order due to a bug during checkout, that’s a lost sale. It’s one thing when you know for certain clearing the cache will solve an issue, but suggesting customers clear their cache as the catch-all can prevent serious problems from getting fixed. If clearing the cache does not fix the issue, the customer may not follow up or complete the purchase. Last summer, Help Scout started receiving a few reports about a cursor disappearing in the text editor, making it difficult for some of our customers to reply to   customers. Since we pull customers’ browser information into conversations using a   for third-party sources (and automatically with questions sent through  ), we noticed a trend: these reports were coming from customers using Firefox. A certain keyboard combination was causing Firefox to lose recognition of the cursor’s focus in the editor, stopping replies in their tracks. The bug wasn’t specific to our editor, but it was still affecting (and annoying) our customers. We tagged the conversations, let our customers know the issue was specific to Firefox, and explained that as a temporary bandage, they could use another browser. We added some key event handlers to detect when a user maneuvered the keys in a particular way, and we manually instructed the browser to do what it should be doing on its own through our editor. We ran the workflow on all the tagged conversations notifying that the issue was fixed, and all our happy customers could return to Firefox. Maximum happiness for everyone involved. The plethora of third-party tools and browser extensions can make any customer support rep silently scream at seemingly irreproducible, near-impossible-to-pinpoint bugs. That struggle is real. But it isn’t enough to tell your customer to disable their extensions to “see if that works.” , whose product prompts short periods of physical activity throughout the school day, regularly screen-shares with customers (primarily teachers) to get to the bottom of problems. Those problems are often out-of-bounds—unrelated to GoNoodle’s product and stemming from a third-party tool, such as the external display teachers use in their classrooms. Smart Boards (a widely used line of interactive whiteboards), for example, run on their own internal software that doesn’t always play nicely with GoNoodle. To crack this nut, GoNoodle’s special ops developer tested all Smart Board software at different release levels to find which ones work for their customers. Even though GoNoodle doesn’t bill itself as “software compatible with Smart Boards,” they keep a Smart Board in their office to run tests when they suspect that’s what’s causing customer-reported issues. It’s a losing battle trying to allocate resources to adapt your site or software to accommodate every third-party tool out there, but that doesn’t mean your support needs to shrug these situations off as “too bad, so sad.” There is a line between when you can and when you can’t help someone, and it’s often drawn when another contact would lead to faster and more comprehensive help for your customer. Customers will sometimes write to Basecamp support, for example, complaining they can’t access their website, when what’s really happening is the customer’s web admin set up a Basecamp account and invited them to it, and they’re confused about where to go for help. Once the support rep figures out what’s going on, they point the customer in the right direction, explaining that Basecamp is the program their web admin is using to collaborate with them on their website. They offer the email address for the account owner and instructions for how to post the same question in Basecamp. It’s not your job to know and research every tool your customer touches, nor is it scalable, but in those cases it’s best to help in good faith every way you can and lead customers to better help at a deeper level. Regardless of what’s going on outside your company’s door, you have a responsibility to help your customer, even when the issue is with a tool you don’t support. It may mean working with third-party tools; it may mean stopping to teach less savvy users about how saving to a PDF works. You can at least answer their immediate questions, then direct them to resources to help them learn. Your customer doesn’t care whose fault the problem is. They just want it fixed.",Mo McKibbin,2
2016-04-19,https://www.helpscout.net/blog/cross-pollination/,The Gap Between Work and Play is Narrower Than You Think,"I am a DevOps Engineer at   and a fiction writer. I craft software code at work, but most mornings, for an hour, I write stories simply for the pleasure of it. In the past, spending time on writing despite the lack of tangible returns has made me feel guilty. I have struggled deciding where I should invest my personal time: studying English grammar and punctuation to improve my storytelling? Or learning iOS programming to improve my engineering resume? I am not the only one who has struggled to make choices between passions and livelihood. Woodworkers, calligraphers, nail artists, bassists and creatives of all kinds want to keep practicing their art alongside their day jobs, but have limited personal time and energy. What do we hobbyists do? Is there any advantage, any argument to be made, for practicing our passions quietly, day after day? In  , Steven Johnson insists that due to cross-pollination of ideas across multiple fields, hobbyists are more positioned to make leaps of innovation. Most innovation occurs via incremental improvements, but every now and then an individual thinks ahead of his or her time by decades, or even centuries. Leonardo da Vinci, for example, designed a helicopter in the fifteenth century. These individuals, Johnson observes, “tend, as a group, to have a lot of hobbies.” Johnson points to Ada Lovelace, a nineteenth-century Victorian mathematician and the daughter of the poet Lord Byron. Lovelace wrote the first set of instructions to be executed by a machine and also prophesied that Charles Babbage’s   would, in the future, be used not only for crunching numbers but for creating higher arts such as “elaborate and scientific pieces of music.” Johnson claims that in addition to Lovelace’s intelligence, her unique background in both poetry and mathematics helped her take this conceptual leap, while many of her contemporaries were still struggling to understand the concept of a programmable computer itself. On the surface, engineering and fiction writing may seem irreconcilable, belonging to the separate worlds of the sciences and the arts. But historically, these two worlds have cross-pollinated and combined ideas frequently. J.A.R. Newlands’ “law of octaves” in chemistry likens the repeating properties of every eighth element in the periodic table to a musical scale; Albert Einstein experienced major breakthroughs during his violin breaks; Steve Jobs famously  , which impacted technology from Mac to Windows. As a software engineer, I’ve solved problems ranging from fixing broken UI in the website to coding processes for faster code deployments to production. Regardless of the technologies, I use critical thinking and apply problem-solving techniques such as defining the problem statement and listing the conditions, breaking the problem or the solution into smaller parts and then recombining into a whole, or deciding to use suitable design patterns and computer algorithms. These same problem-solving skills are of equal importance within narrative and character arcs. Questions like, “How do I build the next generation search?” and “How do I redeem this character?” are answered by the same techniques, though the execution and toolsets are different.             Before writing a story, I raise questions such as: “Who is the protagonist? What is the sequence of events? How do I state the character’s background story without boring the reader? What information should I give and what should I hold back? Is there anything about the story or characters that I don’t know?” For software, I ask mostly the same questions: “Who will use this solution? What is the sequence of events? What information will add value to this conversation or document? What structure will work best? Is there anything about the requirements that I don’t know?”   Help Scout’s Mo McKibbin, who also acts and writes screenplays, identifies with these parallels. “When writing or acting, you need to know every character backwards and forwards,” she says. “You need to know what their favorite color, food, or band is—even if these details never come up in the script, they still slightly shift the way the character experiences the world.” Turns out, Mo’s practice in fleshing out imaginary humans translated well to her role in writing copy and creative assets for Help Scout’s customer  . “When I write for these personas I try to adopt that character and speak in his or her voice,” Mo says. I cross-pollinate by writing both code and prose, but the benefits are there for anyone who practices something creative in addition to their day job. Those hobbies could be painting, pottery, woodworking, or anything else that brings joy. The Greek philosopher Pythagoras heard the hammering of four blacksmiths and discovered a connection between music and math. And just like that, the universe is interconnected. So don’t box in your job and hobbies; don’t give up your passions out of guilt. An unconventional road to learning can lead to a work of genius—or at least to a unique story to tell.",Beenish Khan,4
2016-04-12,https://www.helpscout.net/blog/being-nice/,When Being Nice Isn’t Being Kind,"‘Just be nice’ is emotionally resonant but nutritionally shallow advice, paying no mind to the complexity of candor. Does respecting someone’s work mean being honest enough to say hard things? Is staying silent when standards aren’t met a selfish gesture, not a caring one? Is motivating someone through stress actually kind in the long run? Mental shortcuts, like assuming there is a clear right and wrong in any given situation, are tempting because they promise us concrete answers with minimal effort. Perhaps this is why “niceness” has become sloganized. “ ” cries the Internet. Sure, but don’t be a doormat either. If we aren’t careful, this simplistic thinking can confuse what it means to be nice with what it means to be  . The end result is that “niceness” becomes a black-and-white trait with no nuance, one that more readily resembles   than the spectrum of ways to make a kind, thoughtful gesture to a peer or colleague. Recipe: take some honest feedback and sandwich it in between two compliments. This brown bag psychology implies any sort of critical feedback requires double the praise to make up for it, even if you have to reach. You’re left making a dangerous assumption: that critique and criticism are inherently unkind. Operating with this mindset creates an unhealthy expectation for “conversational fluff.” People start tip-toeing around each other and resort to using undecipherable soft language that’s sole purpose is to ward off conflict and protect feelings. The truth inevitably becomes buried under a pile of pleasantries. Soon enough you’ll be stuffed on compliment sandwiches and starving for some honesty. A smarter approach is to have a built-in good faith clause—to always interpret feedback and judgment from your team as coming from a good place. This isn’t to say working together requires pre-emptive pardons for reckless insensitivity. Being honest doesn’t mean  . But you’re better off accepting that a little friction is bound to happen. Friction in small doses is perfectly fine; it’s the only way to make sparks fly. At  , we have an unofficial principle built around this idea called  . Consider it a modern twist to Hanlon's razor: Born from the reality that remote cultures rely on text and text is  , it also applies to co-located teams. With benevolence assumed, you’re free to share the unblemished truth. No need for defensive language; everyone should already be assuming positive intent. When you comment, “This hasn’t hit our standards yet,” I know you think I can make it great. Here are a couple of side benefits we’ve personally seen:  When you work with people who know what they’re doing, it can be intimidating to challenge the Subject Matter Expert. Truth is, quality control is everyone’s job. We’ve seen cross-discipline challenges lead to better results, and now they happen more often, all due to one internal assumption: we’re trying to make this thing the best it can be, regardless of everyone’s roles. Fighting to make it right > being polite.  Earlier this year the marketing team found itself with too many project cards containing comments like, “Can you please take a look at this?” What a polite way to ask! One problem: no hard edges or due date means it’s going to slip to the bottom of someone’s list. We now skip the circular talk and insist on keeping it short and sweet: “I need this by EOD, thanks!” If you can’t make it happen, reply honestly; assumed benevolence goes both ways. The web is littered with personal essays on “that one time I had the wind taken out of my sails and was better for it.” We already know this stuff. We know frustratingly high expectations come paired with similarly high beliefs in our talent. We know   can actually be a positive form of pressure—a “good weight” for us to carry. I more than sympathize; I actively make this mistake all the time. Reasons abound to just do the polite thing. Let the high fives ring and the good times roll, right? I often need to reflect on what “kind” really means, and how avoiding tension isn’t always to someone’s benefit. There’s no catch-all solution for the tangled mess of emotions inherent in giving hard feedback. But it’s better to strike at the core of the problem—the intent we assume—rather than take a duct tape approach by using insincere courtesies to patch up any misunderstandings. Stick to assuming benevolence; when working with great people, you’ll rarely be wrong.",Gregory Ciotti,3
2016-04-07,https://www.helpscout.net/blog/unlimited-vacation/,There's No Such Thing as ‘Unlimited Vacation’,"As much as some progressive companies love to claim “unlimited vacation” among their benefits, there’s really no such thing. If there were, employers would be paying people who never show up. Even with the most flexible of time-off policies, there still has to be some sort of understanding in place between the company and its workers about what’s reasonable and expected. Putting guidelines in place will ward off any friction and anxiety that may occur when PTO is otherwise a free-for-all. As a hiring manager, you might think “unlimited PTO” is an attractive benefit, especially for candidates coming from Orwellian organizations that monitored their every move. And yes, it’s a godsend for folks who no longer need to file paperwork just to visit the dentist, or who fear retribution when their kid is sick and they need to stay home. How much time off is too much—will I get a stern talking-to if I take four weeks off in a year? Five? Six? Should I feel guilty about putting my team in a tight spot? What about that workaholic jerk setting an unhealthy precedent by never taking any time off—does leadership secretly wish everyone were more like him? Where the company’s concerned, the primary benefit of an open vacation policy is that no one has to administer that baloney. Leaving it up to individuals means that management can focus on less menial tasks. But tracking doesn’t have to be cumbersome—most Human Resources Information Systems (HRIS) have time off-request processes built in, or you can use a stand-alone product like  . Even with an “open” policy, tracking is critical: Help Scout’s policy used to be “take time off when you need it.” That changed, as it has with other companies, when folks started asking the People Ops team how much time off others were taking. No one wanted to be the selfish outlier. Now, to reduce insecurity about what’s appropriate, we encourage everyone to take three to four weeks off per year (plus 10 holidays) as a rough guideline. We ask everyone to get approval from their manager for anything more than a half-day, to minimize impact to the productivity of the team. We use   to ensure everyone’s vacation is on one calendar and to track time off—which we only do to ensure people are taking   time off. We feel strongly that time away helps everyone stay focused and productive when we’re in front of our computers, and some people (leadership included) need a gentle reminder that not only is it okay to step away, it’s sanctioned. Jacob Zax, Co-Founder and CEO of  , shuts down the office for 19 specified weekdays per year. “Our company runs religiously in two-week sprints, so syncing up our time off helps us stay productive,” Zax says. “In addition to those 19 days, people can request additional time off (or always take a sick/personal day), but need to explain why and may be denied.” While it’s not particularly flexible, the pros—clarity, forced work/life balance, minimal team disruption, and the ability to confidently plan trips in advance, among others—outweigh the cons.  offers a flexible PTO guideline of 21 days off per year, which get front-loaded into their HRIS. People don’t have to record their time off (although some managers choose to track it with their teams), and they can take more than 21 days with their manager’s go-ahead. “We opted not to call it ‘unlimited,’” says VP of HR Rebecca Clements, “because we believe there is benefit to setting an expectation about how much time off is reasonable and supported.” A handful of heroes like  ,  , and   offer “paid, paid vacation”: time off plus funding for teammates to take trips. (We’ll get there!) There’s no one-size-fits all approach to a flexible vacation policy; every company handles it differently. “Ultimately for us it is an expression of how we give everyone full trust when they join the team,” says Ryan Sullivan, co-founder and CEO of Parkifi. “They are trusted to manage their time effectively, to make choices that are in the best interest of Parkifi, and to communicate to the management team if they have issues. The unlimited vacation policy gives us a very visible way of showing that we actually mean those words, and that they have responsibility to be trustworthy teammates.” If your benefits advertise “unlimited” time off, that’s not a real promise you can make—an open or flexible time-off policy is closer to the truth, and to the understanding you reach with the team you trust to act like adults. Instead, set some guidelines that allow people the freedom to take what they need while still getting the job done.",Emily Triplett Lentz,2
2016-04-14,https://www.helpscout.net/blog/local-maximum/,In Defense of the Humble Local Maximum,"When I first came across the concept of a “local maximum,” it blew my freaking mind. Here’s the general gist: Imagine it’s a pitch-black, foggy night and you’re airdropped into a random spot in a hilly terrain. Your mission is to hike up as high up as possible, but your lantern only lets you see a few feet around you. What should you do? The most obvious thing would be to just make sure you keep moving in an upward direction (remember you can only see a few feet around you). That way, you’re basically guaranteed to wind up at the top of whichever hill you happened to land on. But what if it’s a really short hill and there’s another one that’s way taller? Your “always go up” strategy will get you to the top of the hill you’re currently on (the “local maximum”), but it won’t get you to the top of the tallest one (the “global maximum”). This metaphorical conundrum is an old mathematics/compsci concept used for identifying the peak item in a given data set. The design world has recently borrowed it as a metaphor, with mixed results. The way a lot of people apply the hill climbing concept to design and optimization is as follows: when you initially design something, it’s like being airdropped into a random location, and optimizing it is like climbing the hill you landed on. It’s usually used as a cautionary tale, warning that if you slavishly pursue improving metrics and nothing else, you will inevitably neglect to consider radical alternatives that may have an even higher ceiling than the thing you’re optimizing. Often, this super cool and scientific-looking illustration accompanies it: This notion has often been used to discourage people from overcommitting to website optimization (“climbing the hill you’re on”) and instead radically redesigning things (“trying for the bigger hill”). This is a very cool concept, but its application to design is very flawed. Here’s why. Remember when the hill-climbing analogy started with you being randomly dropped in an unknown terrain, where you could only see a few feet around you? This implies you have no way of knowing whether you’re on a tall or short hill to begin with. You’re surrounded by inky blackness, so it’s impossible to compare your situation to another. Keep in mind when looking at the cool diagram above that you don’t know where the bigger hill is, or how much bigger it is, or even if there IS a bigger hill—for all you know, you might already be on the biggest hill! Let’s fix that now. Here’s what you can actually see: Don’t forget that in the metaphor, where you land is random. Therefore, redesigning isn’t “the bigger hill”—it’s just another chance to get airdropped onto it. You could just as easily wind up landing on a hill that’s even shorter than the one you’re on now. Redesigning is like taking another spin on a roulette wheel, not getting to decide where the ball winds up. Another core fallacy with this analogy is that there is a “tallest” hill to begin with (i.e. the “global maximum”). While the diagram only shows two hills, we know there are way more than just two possibilities of how a website could be designed. In fact, it’s pretty easy to claim that there are infinite possible designs for a site. This means that the “terrain” in which you’re working is infinite, as is the number of hills it contains. And an infinite number of hills means there is no “biggest” hill. It’s all just varying degrees of “local maxima.” In that sense, the local maximum is not a terrible place to be—it literally means you’re “maxing” out the thing you’re optimizing. Few designs achieve anything approaching that state. Is it possible there are other design possibilities out there that could be optimized even further, however? Yep. It’s pretty much a given considering the infinite landscape we’re working in. Sometimes blowing up what you have so you can “switch hills” is the right move, even if it’s a spin of the aforementioned roulette wheel. Still, hitting any hill’s local maximum will always be more desirable than not hitting it. Running up against a local maximum should be a goal, not something to be scared of. Lastly, how are we even defining one version of a website as being distinct from another? It’s easy to see two hills as unique, unwaveringly individual objects, but the multi-faceted experience of using a digital interface? Not so much. What if you completely revamped a site’s layout but left its architecture in place? What if you overhauled its aesthetic but kept the feature set as-is? What if you kept everything else exactly the same but added more content? How much does a website have to change to become a metaphorical “other hill”? 70 percent? 100 percent? And what specifically has to be changed? Glaciers and earthquakes notwithstanding, hills are fixed elements in their landscape. A website is decidedly not. Not only are websites infinitely adaptable, the landscape they reside on—the intentions of the people pulling them up—is constantly evolving, as well. So not only is the terrain you’re “parachuting into” not finite, it’s not even standing still. Optimizations and redesigns are not enemies. Nor are they opposites. In fact, they’re not even different things. Any analogy that compels people to say, “See! There’s a point where you should stop optimizing and redesign instead!” is missing the boat. Optimizing is redesigning— it’s just keeping score while it’s at it. What I think trips people up are the   of a design change. Every change to a website is a “radical redesign” within that change’s scope. This is true for everything from a site’s entire architecture all the way down to the most stereotypical “tiny optimization” tweaks like changing button colors. Optimization literally can’t happen without redesigning something, and measuring how a redesign went doesn’t make it any less of a redesign. Changing a button’s color and text is still a “radical redesign,” within the scope of that button. Completely overhauling every element on an entire screen in one fell swoop is still optimization, provided the new version went live in such a way that you could gauge its performance. Let’s change the nature of the question from the either/or of “Should I be optimizing or redesigning?” to “What level of granularity should this design change be?” Sometimes you will want to do spot work on a design’s details, and sometimes you will want to change its entire foundation, but the process of changing a design should always be the same, regardless of its scope. A button can have a local maximum, just as a block of content could, or an entire screen, or an entire site. Embrace it. Pursue it, even. You just may find life at the top of the hill pretty enjoyable.",Samuel Hulick,3
2016-05-04,https://www.helpscout.net/blog/april-2016-release-notes/,Release Notes: April,"When it rains it pours, and April showered Help Scout with some fun (and useful) new features. Keep tabs on any conversation with  , use DKIM or DMARC to give extra oomph to your deliverability, and amp up your conversation crushin’ with a bunch of new releases to the iOS app including Saved Replies, Tags, and iPad support.  lets you subscribe to conversations by getting email notifications delivered right to your inbox, keeping you informed of customer responses, team member replies, or notes on conversations without otherwise getting involved. Encourage newbies to Follow conversations to get a feel for how team superstars navigate tricky scenarios, or Follow team members who need a little more coaching to ensure they’re on the path to success. Give your customers a voice in roadmap prioritization. Follow conversations about feature requests (or spankin’ new feature releases) to keep an eye on how your customers interact with your product. Curious how your support engineers troubleshoot more technical issues? Want to absorb the language your sales team uses to make your product seem shinier? Follow that! Take control of your own professional development and diversify your skillset by shadowing conversations handled beyond your department. No need to assign the conversation to yourself or a team you’re on; just hit the “o” key on your keyboard or select   from the   dropdown to receive email notifications on customer and team activity on any conversation. Spam is no laughing matter, unless it comes from a can. DKIM and DMARC authentication help you improve email deliverability with even the most stringent of spam filters. You can set up authentication with DKIM and DMARC in the Mailbox Settings dropdown menu under  . We’ve made a bunch of updates to the Help Scout app this month. How do you like them, Apples? The iOS App is now available in super sized mode, supporting both iPad and iPad Pro. Enjoy a fancy split screen view to get the whole picture of everything you're working on. If you’re not yet rocking Help Scout’s iOS app on your iPhone or iPad,  .",Mo McKibbin,0
2016-04-26,https://www.helpscout.net/blog/support-during-company-events/,How to Handle Support During Company-Wide Events,"Support can be a 24/7 job, but that doesn’t mean your support team members should be working 24/7 — especially during team events or holidays. What’s the best way to tackle support when your customers are still at work while your team has the day off? It’s easy to overlook this issue until you’ve had an   and are left with unattended and unhappy customers or a support team that missed out because they were working through the queue. Ryan Thielen from Procore recalls an all-hands trip during which the support team missed most of the events, “which was a disappointment and, in some ways, a waste of a trip for them.” When you run into that problem, you’ll surely be looking for a way to keep everyone happy and engaged the next time. Luckily, there are lots of tried-and-true solutions to go to when this comes up. It’s all about designing one that makes the most sense for your team. Here are a few suggestions from some A-level support teams. When your team gets together or takes a holiday, you can spread the obligation to your customers around to everyone at your company by taking advantage of the  . If your team is typically not all in the same place, this is a great way for folks who aren’t regularly working through the support queue to learn from your support team. Emily Chapman at Trello recently wrote about how  , and it inspired her to create and refine great training materials. Help Scout practiced a version of this on a recent team retreat. We set up shifts throughout the day, with a couple customer team members and a couple non-supporters working to respond to customers. Our customers team was able to coach other team members closely on their responses, and it just might have created some new appreciation for our team: Support team members are the best teachers for the rest of your company on all-hands support. With support duties spread across the whole company, your regular supporters won’t feel sidelined while everyone else is busy having fun. On the flip side, there are advantages to letting your support team do the work they’re good at. Your support team is made up of pros, and they can handle customer queries with more speed and friendliness than anyone else. (And maybe  .) Kristin Aardsma at Basecamp goes this route with her famously speedy team. During their twice-yearly team meetups, Basecamp’s normal U.S.-hours support team of five swells to a team of 11 (usually scattered across the globe) to work 9-6 p.m. CST, “allowing us to clear the overnight queue quickly and offering longer breaks to bond with other teams.” Customers are alerted that support is operating under somewhat more limited hours, and the support team is given space to do their best work, making that critical cross-team bonding possible. Should you go a similar route, you have lots of options to make things easier on your team. Mat Patterson, who headed support at Campaign Monitor before joining  , ensured during Campaign Monitor meetups that support team members traveled earlier or later than others, so someone was always on the ground with stable wi-fi while others on the team were traveling. He’d also find his team a shared space to work and a good internet connection. If you’ll be staying at a hotel or spending time at another dedicated venue, get in touch with the staff to take care of this ahead of time. With an  , you might find you don’t need to worry about holiday coverage, since many holidays are specific to a country or culture. As your team grows, you’ll probably also find some folks are happy to take on holiday work in exchange for time off of their own choosing later on. As big advocates for taking care of your customers, this one is hard to recommend! But what works best for you depends on your company and team, and that might mean going offline over a team meetup or a holiday. This makes the most sense if the type of support you offer is typically non-urgent (not an option for say, Airbnb, or your bank), and when your support volume is relatively low. If you’ve been   on volume and can be confident it won’t overwhelm you when you return, giving your team permission to go offline and enjoy themselves is a wonderful gift! If you do opt to go offline, you can use that handy   (or any email client — most have a similar feature!) to let your customers know what’s going on and when they can expect to hear back from you. It’s also a good idea to peek at your inbox every once in awhile or have a system set up to ping you if an emergency arises. (As if you could resist checking your support inbox anyway.) If your team is already working with a third party to help with support, you can lean heavily on that when your regular supporters are busy. Erica Seamster works at The Yeomen, a company that handles support for other companies, and she loves enabling teams to enjoy their company-wide events and meetings worry-free. “The staff can have company events and not worry at all because we have their back. While they are at an off-site event, their support doesn’t change because they have us answering all incoming email.” While this is a great option if you’re already working with a third party to help with or manage support entirely, it’s a challenge to take this on   for a holiday or event. If the option interests you, it’s best to develop a relationship with a company like Seamster’s well before you’d rely on them to handle incoming customer messages while you’re unavailable. This is a question with plenty of different answers! As always, everything depends on what works best for your customers and your team. That might be one of the above options, slightly altered versions of several of them combined, or something else entirely. As long as your team is happy and your customers are happy, you’re golden.",Alex Edwards,2
2016-04-20,https://www.helpscout.net/blog/benefits-of-writing/,The Psychological Benefits of Writing,"When you attempt to envision a writer,  I imagine many of you see a quirky recluse, hunched over a desk in some cabin, crumpled paper strewn about as they obsessively work on the next great American novel. But writing is so much more. Prose is  , which makes all of us writers—even if we don’t have the chops to tangle with Faulkner. In most cases, writing is most useful as a tool for thinking, expression, and creativity; cabin-dwelling novelists be damned. Let’s look at some of the benefits of making writing a regular habit. Much of the   on writing and happiness deals with “expressive writing,” or jotting down what you think and how you feel.   “undoubtedly affords similar benefits” to private expressive writing in terms of therapeutic value. Expressive writing has also been linked to improved mood, well-being, and reduced stress levels for those who do it regularly,  : Laziness with words creates difficulty in describing feelings, sharing experiences, and communicating with others. Being able to flesh out thoughts in your mind only to have them come stumbling out when you speak is supremely frustrating. Fortunately, regular writing seems to offer some reprieve. In both emotional intelligence and in hard sciences like mathematics, writing   to help people communicate highly complex ideas more effectively.
Writing helps eliminate “it sounded good in my head” by forcing your hand; brains forgive fuzzy abstractions, prose does not. In one   that followed recently fired engineers, the researchers found that those engineers who consistently engaged with expressive writing were able to find another job faster. Says Adam Grant: According to an older study, writing about traumatic events actually made the participants more depressed, until about 6 months later, when the emotional benefits started to stick. One participant noted, “Although I have not talked with anyone about what I wrote, I was finally able to deal with it, work through the pain instead of trying to block it out. Now it doesn’t hurt to think about it.” It seems that timing is critical for expressive writing to have an impact. Forcing the process to happen may only worsen things, but if writing is an activity that is engaged in naturally, the benefits  . As the authors of one   noted, subjects who reflected on the good things in their life once a week by writing them down were more positive and motivated about their current situations and their futures. The catch was, when they wrote about them  , the benefits were minimal. This makes sense; any activity can feel disingenuous and just plain boring if done too often. It seems like the key is to reflect and write about gratitude regularly, but not begrudgingly often. Have you ever had too many Internet tabs open at once? It is a madhouse of distraction. When I feel like my brain has too many tabs open at once,  it’s often the result of trying to mentally juggle too many thoughts at the same time. Writing gives form to your ideas and gets them out of your head, freeing up bandwidth and preventing you from crashing your browser like a late night downward spiral on Wikipedia. I’ve personally never felt inclined to not work on something just because I “archived” the idea with some notes or an outline—in fact, I’m more likely to continue developing that idea since it has already been started. If all else fails, remember this joke from Mitch Hedberg: “I sit at my hotel at night, I think of something that’s funny, then I go get a pen and I write it down. Or if the pen’s too far away, I have to convince myself that what I thought of ain’t funny.” Information often sticks better when it’s learned as though it needs to be taught or re-written in your own words. This concept of having a “writer’s ear” never fully clicked with me until I started writing regularly. There’s a certain discipline required to create interesting written work that demands the individual be receptive and focused on finding new sources of information, inspiration, and insight. I’ve read books, listened to podcasts/radio, and watched videos I would normally have put off in order to learn something new so that I might write about later. Simply being a curator of good ideas encourages deeper thinking, research, and “heading down the rabbit hole” in order to find unique takes on topics that matter to you. Committing to creating   also allows you to tackle big ideas more effectively. Writing around a certain topic for some time will allow you to build off of older thoughts, utilizing what you’ve already written to develop ideas on a grander scale—I’m sure many writers have written a paragraph that lead to an essay, which lead to a series of articles, which lead to a book. Though the world may now be drowning under the personal brand deluge, there are sincerely interesting opportunities that an “anyone can publish” world brings about. The ability to leave an impact at scale through your words alone is an astounding concept. There’s a bit of a creative shock the first time someone emails you, thanking you for the work you’ve put out and sharing how it has helped or influenced them. Without a doubt, the positive feedback for this “leadership at scale” leads to gratitude and further motivation for the writer. Even in the face of criticism, writers learn to build thick skins like few others. Criticism, even unwarranted, is the breakfast of champions.",Gregory Ciotti,5
2016-05-03,https://www.helpscout.net/blog/product-managers/,Do You Need a Product Manager?,"To build a great product, you need design and you need engineering. Somewhere along the way, and especially as companies grow, another mysterious role enters the fray: the Product Manager. Conventional wisdom says that as a product becomes more complex, you need someone strategizing, coming up with plans and executing on them—someone who can step back and organize the process around a bigger vision. They also ensure everything gets done on time, on budget, and without drama. But the Product Manager role introduces a couple disadvantages. It seemingly takes ownership away from the people doing the work. Designers and engineers become cogs executing a plan when they should be empowered to solve customer pain. Product Managers also add overhead to every project, albeit unintentionally. You may not need a Product Manager. At  , we don’t have any dedicated Product Managers. Instead, the goal is for designers and engineers to manage their own work. It may not ultimately scale, but we love how it distributes authority amongst the team. With a Product Manager in the mix, it’s easy for “not my job” syndrome to creep in. People doing the work suddenly get someone to lean on for all stages of project planning, including ancillary tasks—writing specs, doing customer research, organizing to-dos—and it gets pretty easy for them to say anything other than pure execution is “not their job.” A magical thing happens when there’s no Product Manager. All of the project planning and ancillary tasks become “everyone’s job.” Designers and engineers have to work together to understand customer pain and come up with a delightful solution.  These “chores” become empowering, rather than a burden, because they give people a sense of ownership and responsibility that didn’t previously exist. Some argue that dedicated Product Managers are needed for efficiency. Separation of duties reduces context switching and allows you to better align high-value work with high-value (cost-wise) people. The problem is that this argument doesn’t account for communication overhead, a huge velocity killer on product teams. If a 3-person team can produce Y output, why can’t a 15-person team produce an output equal to 5*Y? The answer is overhead. It’s extremely expensive to keep 15 people on the same page. The reality is that the 15-person team’s output is only 2-3x that of the 3-person team. Adding even one more person to a team creates overhead. It also reduces the amount of ownership on the shoulders of each person doing the work. In order for product teams to move quickly, communication overhead must be low, meaning the number of people must be at a minimum. Ownership of the project must also be distributed, which is in conflict with the whole “manager” concept, where a single person “owns” the project. So what’s the ideal team size? A mentor of mine named David Cancel  . I tend to agree with him, that three people is the ideal team size. Communication overhead is virtually zero in a three-person team that has all the tools they need to do great work. Four or five people has some overhead, and anything over five is going to cost you. Managers often put an unnecessary layer between customers and the people building a solution. It works like a game of Telephone. The more layers between customers and designers/engineers, the more skewed the message is by the time it gets to the people that need it. On the other hand,   when designers and engineers feel the pain and are given the autonomy to solve it how they see fit. When the outcome is on their shoulders instead of on a “manager,” they are capable of doing their best work. To be clear, the work of a product manager is critical. But our goal is to distribute that work rather than hire for a dedicated role. For product management to be everyone’s job, designers and engineers have to take on more responsibility. We’ve found it’s pretty easy to split up the work. Designers are responsible for being the voice of the customer from initial concept through to final deployment. Only a fraction of their work is pushing pixels around. A designer does customer research, written specs, wireframes, working prototypes and testing alongside engineers. They also run any beta period themselves so that they can hear customer feedback firsthand. Lastly, the designer has the final say on launch. Not every designer on our team does this sort of work, but we have a couple people who are great at it. Engineers have more ownership without a product manager as well. They write their own technical documentation, coordinate the work and timelines with any other engineers on the project and are responsible for communicating about their progress. While many product teams seem to revolve around engineers and giving them the most autonomy, I’ve seen this have a negative impact on the customer experience. As a company grows, product development gets slower, takes more people and requires more effort. We often misunderstand those challenges and insert Product Managers to make the process more efficient. I’d argue that this role exacerbates the problem instead of solving it. At scale, things move slower: that’s a fundamental reality. The key to maintaining the highest possible velocity is giving the designers and engineers ownership over the work. I've had some great discussions with folks in the product management community over the last week. Since we don't currently allow comments on the blog, I wanted to share a few clarifications:",Nick Francis,0
2016-04-20,https://www.helpscout.net/blog/track-customer-requests/,Track Requests to Keep Customers Coming Back,"If you’re not tracking your customers’ most common complaints and requests, you’re missing a huge opportunity. Telling people to “keep an eye out” on your status page, Twitter feed, or wherever it’s convenient for   to share news about your product puts the onus on them. Not exactly an  , is it? Not to mention the business you lose when your customers switch to a competitor, because as far as   know, you still don’t have that feature you worked so hard to build, and you still haven’t fixed the bug that’s been driving them bonkers for months. Chances are, you already have the tools at your disposal to help avoid this fate—and it takes less time than you think. One or two bug reports about the same funky behavior? Could be a fluke. Once you start to see a handful, you know there’s an ugly bug in need of squashing. Sure, you can reply to each new customer complaint: “Sorry, known issue, we’re working on it!” and leave it at that, but you’re passing up the opportunity to open a line of communication by proactively keeping customers informed. After more than a couple Help Scout customers report the same issue, for example, we begin   those conversations as they come in. Once the fix is deployed, we create a   that allows us to send an email—customized with each customer’s name—letting them know that yucky bug is good and dead. Customers appreciate the follow-up, and many of them reply to let us know. Side note: Help Scout’s   plan lets you make “bug report” an option in a required custom field. That way, since you can sort those and tag conversations with their corresponding bugs, you’re extra-sure not to miss anyone. While 100% uptime would be nice, I’m unaware of any site that honestly boasts it. Lots of them. Ideally, you’re aware of the issue before they are, and your support team has a process in place to head these inquiries off at the pass. Yes, automating your status page and tweeting about the issue are best practices, as is sending a   to everyone who writes in about it. Where you really have the chance to go above and beyond, however, is by following up after that initial message (which, by now you know should not consist of “keep an eye out on our status page for updates!”), once everything is hunky-dory. Every help desk worth its salt will allow you to bulk reply in some fashion. If you use Help Scout, you can tag those downtime reports as they come in, then run a workflow (again, using  — ) to let your customers know the following: Customers will forgive these inevitable blips as long as you’re quick, communicative, and transparent. This level of follow-through is the difference between “That’s okay, folks!” versus “Ugh, what, again?” For a while, the most frequent feature request we received was for a mobile app. When we launched   earlier this year (your time is coming, Android friends!), we figured we ought to tell folks who’d asked about it. Fortunately, we’d been tagging those requests all along—as with bug reports, we start tagging once a handful of customers ask for the same thing. That tag allowed us to run a workflow notifying (and hopefully, tickling pink) the 417 people who had asked us about a mobile app. But we didn’t stop there: we also emailed former customers who cited “no mobile app” in our cancelation survey as a reason for ending their trial or canceling their account. The email announced the new app and offered an extended trial to try Help Scout again. While not everyone jumped back on board, we saw 41 new trials as the result of that campaign. Following up with your customers when you have good news to share will only help you build trust. If crafting a delightful experience is what matters to you, that in itself should be adequate incentive. But don’t ignore the hard gains to be made. If customers don’t hear about your latest improvement, you can’t assume they know it exists. It’s lazy to leave it up to your customers to figure out what you’re doing to help them, and you’re leaving too much on the table by failing to follow through. If you don’t make the effort to develop a solid relationship, you can hardly blame them when they start to develop a wandering eye.",Emily Triplett Lentz,2
2016-04-28,https://www.helpscout.net/blog/organizational-structure/,Org Structure Is All in the Execution,"The debate around organizational structure — “flat vs. hierarchical” — is as impassioned as “co-located vs. remote.” People have   about it, and they tend to come down on one side or the other. But it needn’t be so polarizing. Unlike the “co-located vs. remote” binary, it isn’t necessary to choose a side where org structure is concerned. Special snowflakes that they are, companies are entitled to create (and adapt, as they grow) structures that work for them. The reality is that any structure can work, provided it’s well executed (and yes, “flat” organizations require structure, perhaps more so than traditional ones). For a while there, we couldn’t get away from stories about “flat” organizations — businesses who threw out middle management and job titles in favor of self-directed work and cross-team innovation. And who could blame them? There’s a truckload to be said in favor of flat teams. Cost effectiveness, for one: fewer layers of management means less managerial overhead. Opportunities for collaboration and interconnectivity among workers can lead to creative initiatives. And decreased potential for managerial bottlenecks means that  , sick of being micromanaged, can focus and thrive on self-directed work. Startups latched onto this outside-the-box, no-limits thinking:   Companies such as GitHub and Squarespace embraced a lack of restraints in pursuit of innovative peer-to-peer cultures. Zappos declared itself a “holocracy” (which, if you’re wondering what that means, has its own  ). “Flat was startup-y and awesome,”  . “Structure was BigCorp-y and boring.” The mistake was equating “structure” with “hierarchy.” Turns out, structure is a given however your company is organized, and if you're not deliberate about defining it, unintended power structures develop on their own. Informal cliques and unspoken hierarchies start to crop up, and “casual” cultures devolve into unprofessional ones that hire for “culture fit” and devalue outsiders’ perspectives. Since these structures are largely invisible, they’re therefore unaccountable,  . “That inevitably leads to dysfunction and abuse.” Flat organization comes naturally to early-stage startups, where everyone chips in on everything; you can’t worry too much about titles when you’re hustling to get a business off the ground. That default tends to remain in place until the organization reaches a certain size — generally 25-40 people — and predictable pain points arise.  . The speed at which decisions are reached or fixes occur slows to a crawl. Yucky problems, such as the need to fire underperforming teammates, take too long to come to the attention of people with the power to do anything about them. Founders realize they don’t know the name of the employee they just passed in the hallway. At that point, it’s time to make a call: remain flat or add levels of leadership? Many formerly flat companies — Wistia, Basecamp, Buffer, GitHub, Harvest, and yes, Help Scout, to name a few — are now opting for some version of the latter. We’ve found that disdain for hierarchy comes from experiences with poor management. When you’ve never had a great manager, a flat org structure looks pretty good. Micromanagers are the bad apples that have spoiled the bushel. And certainly, A+ managers are rare ... but isn’t that true for any hire? For that reason, we recently added some new levels to our engineering team. Previously, the sub-teams were organized by function rather than cross-functionality, and our VP of Engineering had too many direct reports, which wasn’t fair to anyone. We needed a more defined structure to function at a high velocity, and we chose a setup (borrowing some ideas and terminology from  ) that’s scaled successfully in larger organizations. Now, cross-functional squads own specific products or areas, while cross-squad guilds discuss and evolve best practices in particular areas of expertise (e.g., Java and PHP). “Coaches” support several squads and are responsible for one-on-ones, hiring, project management, transparency, and guiding squads toward their goals. This works for us, because Squads still get to determine the workflow that fits their style, and as experts in their functional areas, they retain authority regarding implementation of solutions and the amount of   worth taking on. ""No one here is a fan of hierarchy, but I think it’d be hasty to say all hierarchy is bad,” says Help Scout CEO Nick Francis. “Sometimes it’s necessary. I don’t really know how we’d get on without the concept of team leads.” Since there’s no such thing as a structureless organization, you might as well proactively define your structure. In flatter organizations, you almost have to be   careful with that definition. That’s not to say “truly flat” can’t be done, just that considerations like size and interrelationships matter, and you’ll need more training and buy-in from everyone on the team and everyone you hire. As with everything else, the only constant in organizational structure is change. Hierarchy can work when you embrace change and adapt proactively. As we grow, we try to keep hierarchy to a minimum, but in optimizing for ownership and autonomy, we acknowledge that sometimes hierarchy can facilitate a greater sense of ownership and more autonomy. Everything’s a tradeoff. In the end, the execution is what matters.",Emily Triplett Lentz,3
2016-05-05,https://www.helpscout.net/blog/comparing-yourself/,Not Every Comparison Needs to Be Toxic,"A common adage in creative work is to never compare yourself to others. But how many of us actually follow this advice? Suggestions that are commonly heard but rarely heeded should raise a red flag. If we’re hard-wired to answer “How am I doing?” through comparison, suppressing the urge only ends up hiding a more nuanced reality — that comparisons aren’t inherently toxic, and are in fact as productive as you make them. A healthy comparison is looking at good work, or even bad work, and analyzing its parts. If you study a wide variety of material you’ll find the contrast creates context, on both a granular level (“Why is this so good/bad?”) and a global level (“Why do I keep seeing this?”). This context matters for three reasons. You can’t create excellent work until you’ve felt its presence. As Stephen King said of his craft, “You cannot hope to sweep someone else away by the force of your writing until it has been done to you.” This feeling is one of few ways to set and move qualitative goal posts. The abstract yardstick used to measure “quality” can only form through consumption. The good, the bad, and the ugly — you need to know them well and revisit them often. If there’s a better way to  , I haven’t found it. Let’s talk examples. By all accounts, longform writing is a new skill for me. I’d like to improve, but hard measures like pageviews are lagging indicators that haven’t taught me anything about quality. Indeed, only comparison has. In addition to my hero John McPhee’s rightful  , comparison has convinced me that great communication rests on three other important traits:   Maybe experience will prove me wrong.  . But I’m not sure how I’d make a conscious effort to improve without an intended destination. And I’m not sure how I’d pick a destination without knowing where I could be. Have you ever heard of the “ ” trope? It describes the backlash that awaits innovative work — since everything made after bears its mark, an influential idea will often seem stale to the next generation. Even a   won’t stand out once the whole herd has gone lavender.   I’d describe this as the creative  , or understanding “the game outside the game.” Whatever you make will be deemed original or cliché   to what currently exists; creation may be about the lonely hours, but a final product is never judged in isolation. It lives in a dynamic, ever-changing ecosystem. Getting ahead of the curve, or doing the unexpected, means eschewing what everyone currently expects, which requires   what everyone expects. Knowing the metagame — or comparing your work to what exists today — is useful for spotting opportunities for differentiation. Gaps become more obvious when you fill in the areas around them. The benefits of being different need to be balanced with the truth that not everything is worth doing differently. Sometimes your best bet is to do common things uncommonly well. This means studying, comparing — and yes, even copying — the solutions of the top 5%. Funny then, that we seem to have innumerable ways to avoid saying, “I copied what works.” Best practices, patterns, conventions, and of course, inspiration. Any terminology will do to keep the creative mystique; omne ignotum pro magnifico. We’d be better off admitting how beneficial it is to stand on the shoulders of giants. Scott Berkun drives this point home by arguing that it’s not shameful to use an idea “ ”: “Travel widely, in both time and space,”  . Comparison can unearth time-tested solutions that solve age-old problems; it can even lead to old solutions solving new problems. Old books can teach new tricks. The point isn’t to limit yourself or to default to borrowed ideas, the point is you should conserve your time, energy, attention, and creativity for opportunities with high upsides. Areas of stability matter because they free you up to take risks on what counts. I’ve played the role of defense attorney for comparison, so here’s where I admit its faults: Yes, constant benchmarking of results will leave you feeling like the perpetual silver medalist. Keeping up with the Joneses is a surefire way to always show up a day late and a dollar short. But I think it’s unfair to let the radical usurp the reasonable. Averting your gaze — “never comparing yourself to others” — might save your ego, but comes at the cost of stifling an irreplaceable source of learning. In an era where so much is shared, it’d be a shame to let fear of comparison drive your head into the sand.",Gregory Ciotti,4
2016-01-05,https://www.helpscout.net/blog/hiring-top-talent/,Attracting Top Talent for Your Remote Team,"Attracting top talent is your greatest strength as a company—especially as a remote culture. But talent doesn’t always knock on your door; you still have to work hard to build a world-class team. When we started  , I don’t remember any of us making a conscious decision to go full-on remote. It was more of a survival strategy. One of my co-founders needed to work from Nashville for the first year or so. Then some of the most important early hires we made, such as Greg in Delaware or Brett in Missouri, wouldn’t have joined our team unless they could work remotely. From the beginning, we needed the capacity to work well without being in the same place. Since then, we’ve become very intentional about building a remote team. We spend a lot of time and money investing in the culture, making sure people across 30 cities are empowered to do great work. But it wasn’t just the culture that had to change: it was the hiring process. Attracting top talent in the remote world requires a different strategy. In the first three years of the business, I had to let go of about 40% of the people we hired. It was extremely painful, and it wasn’t their fault—it was mine.  I had never hired anyone before starting Help Scout, let alone built a remote team. It took a while to understand what kind of people thrive in a remote environment and learn to identify them quickly in the hiring process. While our mistakes were plentiful, we learned quickly and have only made a couple of hiring mistakes in the last couple years.  People who want to work in San Francisco for the next hot startup have radically different motivations than the typical remote A-player, so it makes sense that the recruiting and hiring process would be radically different as well. This is where it’s helpful to create hiring personas.  It’s not very different from  , which we spend a lot of time on at Help Scout. Anyone who doesn’t fit the profile isn’t worth interviewing. As we’ve developed hiring personas that both align with our values and embody the most talented people I know in the remote world, here are some of the things we’ve identified: It’s not about the perks, the office Ping-Pong table, or the stock options. These people are most fulfilled when they feel empowered to do their best work. The best remote people have a particular passion for their craft, and one of the biggest reasons they love to work remotely is so they can focus on the work itself. Clearly, this characteristic has implications on your culture. Remote people should have great discipline and naturally establish outstanding work habits. They know when to work and they know when to quit working, be it for family, travel, or a host of other hobbies. At Help Scout, we’re vocal about only wanting “your best 40 hours” every week, and we mean it. Without a high level of discipline in this area, it’s likely that the person you are considering won’t be a good long-term remote fit. These opinions can only be refined through years of experience in a particular field. This isn’t their first rodeo, and they can lead others by doing. On a daily basis, they’ll have to lean on experience in order to make critical decisions on behalf of your business. With remotes teams in particular, there’s less oversight involved in these decisions, so you have to trust that everyone you hire is making good ones.  Once you’ve interviewed enough people, it only takes a 10-minute video call (always use video) to suss out these character traits. The key is to ignore all the great things you see on paper and only move forward when applicants fit the remote persona you’ve created. Now that we understand a few high-level details about the persona, it’s important to craft a process and a work culture that plays to their strengths.  Everyone talks about hiring great people, but in an office culture you have the luxury of hiring   people that haven’t quite proven themselves yet. You can hire someone straight out of school who’s really smart and give that person hands-on mentorship and guidance so that he or she becomes great over time.  Everyone has to be an A-player. Remote team members are used to four to six hours of focused, uninterrupted work every day. You have to be able to get through problems on your own and be productive without asking for help. There’s no substitute for skill and experience in those cases. We don’t have interns at Help Scout because it wouldn’t match everyone else’s work style. We’ve made this mistake several times with interns or high-potential employees, but unfortunately it hasn’t ever worked out. In our case at least, it’s best to hire for excellence. The benefits of an all A-player team are pretty clear. They challenge each other, attract other A-players, and enable you to  .  I should also point out the obvious here, which is that   to hire this way. Great people deserve to be paid a wage befitting their talent. All the money you save on office space and related expenses should go right into the people you hire. Our hiring process became much more effective when we introduced projects. Every position we hire for includes a four- to six-hour project as one of the steps. In addition to being able to see and critique the work, projects have a couple of significant benefits.  First, anyone on the team can judge the quality of a project without needing the person’s name, gender, ethnic background, or any other information that could trigger an  . Second, it’s a great way to see how people respond to feedback and criticism. In most cases, we’ll provide critical feedback and see how candidates react, to better understand what it would be like working together. Projects aren’t really acceptable in a local hiring environment. In my city of Boston, for instance, hiring is extremely competitive. Companies are forced to move quickly to make an offer because all the best people are off the market within days and you don’t want to miss out. In a local market, you have the advantage of leaning on your network and references a bit more, but you don’t typically have a chance to evaluate the quality of their work in-depth. For whatever reason, remote hiring processes take more time and it tends to work out better for both sides. Use this time to build a relationship with candidates and make sure they are a perfect fit before pulling the trigger. A typical process for someone we hire can take two to four weeks. Projects vary greatly on what you are looking for, but they typically aren’t related to the business. Unless it is a customer support hire, we don’t want to make people learn business logic in order to show what they can do. Engineering projects are always fictional scenarios that enable people to be creative and go about the implementation in any number of ways; marketing projects may relate to the business, but the problem they solve is usually fictional.  The better your company becomes at encouraging work/life balance to both current and potential employees, the better talent you’ll be able to attract and retain. We do it by asking leaders to set an example. As I write this post, I’m working from Tokyo for the week. If you are putting in too many hours or not taking your vacation time, you’ll hear from someone on our People Ops team because we know balance is a critical piece of sustainable remote work.  An office culture simply can’t promise the kind of balance and autonomy your company can. This is an advantage we use as much as possible to attract and retain great people. Now that our company has nearly 40 people and we’ve overcome some of the initial challenges in building a solid remote team, trusting the process is a lot easier. It still takes work to hire talented people, but the process gets better each time and we’re less likely to make mistakes. If you’re just getting started, write out the characteristics of your ideal teammates and update them over time. Then design a hiring and onboarding process that’s tailored specifically for them. Most importantly, build a company that the ideal employee would be attracted to. Once you get into the rhythm of hiring people that fit your criteria, you’ll be able to make decisions quickly and with confidence.",Nick Francis,9
2015-11-12,https://www.helpscout.net/blog/travis-ci/,The Moment Travis CI Realized It Was Ready for a Dedicated Support Team,"At its inception in Berlin in 2012, every employee of open source integration platform   handled  . Even engineers rotated frequently, and when it was their turn they remained vigilant on support; it was a supplement to their craft. But as a company grows and evolves, sometimes its philosophy on customer support must also evolve.  Serving a customer base of highly technical people whose work is focused on craftsmanship, Travis CI has helped more than 126,000 users and 200,000 open-source projects over the past three years. At this scale, the company needed a new plan to manage its growing customer-support needs. I had the pleasure of speaking to Mathias Meyer, CEO of Travis CI, on how they’re using Help Scout to re-think customer support and build a business that people love. In those early days, whole-company support made sense for Travis CI. “Hearing a customer complain directly to you about something you've built creates a sense of ownership and obligation to the product, as it should,” Meyer says. “This obligation can immediately be turned into positive energy.” Over time, however, the process couldn’t withstand Travis CI’s onslaught of incoming inquiries—especially in the U.S. With the time-zone gap, tickets were simmering in the queue and engineers had to bounce back and forth between tasks.  By the end of last year, it became clear to Meyer that he needed a dedicated support team to better manage the process. He got to work in March, hiring a pair of support staffers. “We were looking for people who had some kind of engineering background or have worked in technical support for developers before,” he explains. Unfortunately, the onboarding process was slow and first-response time grew. To complicate things, March and April were months where Travis CI dealt with outages, leading to an unusual number of incoming support conversations. It wasn’t until May that they started implementing a new support rotation.  The spike in first-response times raises eyebrows, but Meyer offers some clarification: “Our first-response time in February looks rather short, though it doesn't reflect the reality of how much we were struggling with all the issues that were going on,” he says. “A lot of the first-response time efforts happened on conversations that started around production issues, so they were faster than usual.” Looking at these graphs together, Meyer says Travis CI managed to improve first-response time even though their volume grew organically. By July, the company hired two additional support people. Engineers still contribute, but they rotate weekly instead of daily.  As a business grows, sometimes you need a dedicated team to manage the volume and your customers’ needs. For some companies, the shift is inevitable. With its support team now in place, Meyer says something they focus on is using Help Scout’s tagging system to improve Travis CI’s triage process and keep track of great ideas.  “The triaging helps us determine the urgency required for a response, and it gives us more useful data about why customers email us, what the common threads are, where we can improve our docs, our apps, why someone cancels their subscription, and so on,” he says. The support team works together on sifting through the inbox, so there's no one single person to do support on any given day. This, Meyer says, has been a major improvement and influences the company’s product roadmap, because each issue is now given careful attention. “We have some high-value customers and high-urgency problems that generally get tagged as high priority,” Meyer explains. “Those tickets are then picked up by the developer on rotation. Both the developer and the support team work together on processing the support inbox, with the developer on support that week focusing on the high and normal priority tickets first.” These priorities are placed into specific folders to make them easier to process. The team also tracks feature requests and cancellations separately. When we talk about   and improving the user experience, it stems from stories like this. Little insights that have potential to deliver big changes can easily slip through the cracks.  As a final insight, Meyer says quite matter-of-factly, “Always assume the customer is right and you're probably wrong, never assume you know everything to tell the customer to do. When in doubt, ask more questions.” He recommends the book  , as it helped him  identify and develop empathy for the customers he serves. Meyer continues, “Empathy is a key skill when it comes to customer support. Putting yourself in the customers’ shoes and understanding their issues is the most important thing when doing customer support. The great news is that empathy is a skill you can learn, it's not a personal trait.” With a dedicated support team in place, accompanied by a team of engineers who readily feel the  , good things await Travis CI. Thank you to Mathias Meyer at Travis CI for his insights into building a dedicated support team and growing a product.",Paul Jun,2
2015-12-14,https://www.helpscout.net/blog/november-release-notes/,Release Notes: November,"This November we’ve had a lot to be thankful for, but we’re most thankful for the completion of a very major project: re-writing Help Scout mailboxes. We also significantly improved Help Scout Reports, made a tiny tweak to the interface to make our navigation bar more aesthetically appealing, and added a couple smaller but helpful features for notes and the editor to boot. We’ve reworked Help Scout Mailboxes and have already seen a 40-60% increase in how speedily Help Scout fields requests, like getting a conversation in a folder or posting a note. We’re also happy that you seem to have noticed too: Just in time to ease your Q4 reporting woes, we’ve revamped Help Scout Reports with our new Report Views. Views make it easy to save a set of filters and re-visit them in two clicks. We’ve started adding the new Reports Views to accounts gradually, so if you don't see them in your account now, just hold tight as we plan on rolling them out to all accounts over the next week or so. We’ve upgraded the checkbox filters to superflexible workflow-like filters that make it possible to double up on tags, so it’s even easier to distill your data by category. 
 
 We’ve also thrown in an   or   filter to simplify excluding unnecessary data from Reports. As you add filtering conditions, the data updates to view in real time. When you find that perfect set of filtering conditions to review your Reports through again and again, save the conditions as a View to access whenever you need. Sometimes you need to share insider information with a customer, prospective partner, or new hire. Since Internal articles require a Help Scout login, it wasn’t possible to quickly drop or share internal article content via Link from the Docs Search Bar. We’ve added an Insert Content option to help ease sharing forms, files, and any content you might otherwise want to keep a little closer to the chest.  you can use Internal collections for any saved replies you need to share across Mailboxes. Since Docs content is accessible from the Docs Search Bar from any Mailbox, just save the reply content in an internal collection, and drop it into the Reply Editor just like you would a Saved Reply. The editor will pick up any variables used. Saved Replies are dropping in to say hello (or anything else you want) in notes, making it super easy to drop in any saved internal forms or templates. Use them exactly how you use Saved Replies, only for easing repeated communication with your team instead of customers. We like to keep Help Scout looking sharp, so we tightened up the top navigation bar for a cleaner, more minimalist aesthetic. Changes include moving Updates under the Question Mark dropdown, Apps under the Manage dropdown, and condensing the search bar under a magnifying glass icon. 
 
 The cursor automatically lands in the search field when you click the icon or type the / key, so it’s still the same amount of clicks to get your search on, but with less visual clutter.",Mo McKibbin,8
2016-03-31,https://www.helpscout.net/blog/get-unstuck/,3 Approaches to Getting Unstuck,"The first step (always the hardest, right?) in solving a problem is recognizing you have one. We’re all familiar with the feeling of grappling with a head-scratcher for longer than we’d like. It can take a while to connect the time we’ve lost staring at the screen with the fact that we’re stuck on something and it’s time to try a new approach. Stuckedness isn’t always immediately apparent, and we arrive at the realization in different ways. Embarrassing as it is to admit, I know I’m avoiding tackling something big when I catch myself playing too much solitaire. Some of us procrastinate more productively—like   head of engineering Chris Brookins, who admits to sometimes taking on “a bunch of easier tasks to avoid a big one.” Meanwhile, the tasks that loom largest on our lists remain undone. Once you identify your personal problem-avoidance tactics, it’s easier to recognize the “I’m stuck” moment. Here are a few tactics to deploy the next time you notice you’re deep in the stuck. The bad news? “There is no formula for problem solving,” says Michael Kallet, author of  . “If there were, we’d plug the world’s problems into the formula, and we would have no problems.” The good news is there’s no shortage of “ways to look at problems that generate ideas for solving them.” My teammate Gregory Ciotti is fond of mental models—consistently available ways to frame and give perspective to the abstract—for problem solving. “A very practical one is  , which is useful for addressing the negative,” Greg says. “Instead of, ‘What can I do to be brilliant?’ you can start by asking, ‘What should I do to avoid being stupid?’” In that way, inversion thinking can eliminate nasty problems. Help Scout engineer Craig Davis, a former EMT, swears by “OPQRST,” a mnemonic device medical providers use to diagnose patient issues. “With a little practice,” Craig says, “it can be used to quickly diagnose almost any problem.” “If you can describe those questions to your doctor or mechanic, or ask those questions yourself when you are working on diagnosing a problem,” Craig says, “you'll be surprised that the diagnosis will nearly present itself!” Once you a) recognize you’re engaging in your personal favorite avoidance behavior and therefore b) arrive at the realization you’re stuck, then what? You’re on a roll, so you’ll feel the stubborn urge to dig in and focus on the problem. Stop right there. It may not come naturally at first, but once you acknowledge the pattern, you’ll find that patience pays off. Scientists call this the “incubation period,” since our brains continue to work on problems after we consciously abandon them and go do something else. Einstein dubbed it “combinatory play” and reportedly experienced major breakthroughs during his violin practice. Activities that give you relative solitude, free you from distraction, and allow your mind to wander—long walks, meditation or prayer, a good night’s sleep, exercise, even your boring commute—let your subconscious mind work its magic. Ever wonder why you arrive at your best ideas  ? This is why. “It's easy for me to make bad decisions in the moment, so the more time I give things to sink in, the better,” says Help Scout CEO Nick Francis. “I’m constantly reflecting on relationships with my teammates and how I can better support and guide them. Those realizations always come when I’m alone, so it could be during a walk, a workout, the shower, or while working over the weekend.” Talking to an uninvolved party—a mentor, a spouse, a therapist, a trusted friend or colleague—will bring a fresh perspective to solving your problem. Describe what the problem is, what you’ve done, and where you’re stuck. Unlike you, they’re living outside the problem, so they’ll see it from a different angle and hopefully ask questions you haven’t thought to ask yourself. Sometimes, simply verbalizing the problem is enough to solve it; the act of saying it out loud can make the “right thing to do” seem painfully obvious. “I break problems down into smaller chunks I can get my head around, then ask for help on the chunks that perplex me,” says Chris, who bounces ideas off peer groups outside of work. He belongs to a group of eight other VPs of engineering who meet quarterly, chat in Slack, and even abide by rules of engagement. They discuss and help one another with political issues, personnel trouble, and tough technical problems. “We tell each other everything,” Chris says. “We have no fear in this group.” Fittingly, I got stuck writing this piece. I couldn’t decide where to begin or what to focus on, and caught myself staring mindlessly at the screen multiple times. I worked on other projects. I may or may not have played a few rounds of solitaire. “Do you need me to proofread the draft of your post?” I asked Greg in Slack. “Can you tell I’m procrastinating?” I sent him the line from this post about cleaning our houses while the “tasks that loom largest on our lists remain undone,” and we shared a virtual chuckle. It goes to show how tricky it is to recognize stuckedness—I can’t write an article about that very topic without falling prey to it. Eventually, though, I realized what I was doing. I stood up, closed my computer, and took a walk around town. I polled my teammates. I read some books. I got some sleep. And there you have it, the proof in the proverbial pudding: if that hadn’t worked, you’d be reading something else.",Emily Triplett Lentz,8
2016-03-29,https://www.helpscout.net/blog/release-notes/,Capture a Product's True Momentum by Sharing Your Work,"When exciting improvements are being made to your product, everyone in the company feels the momentum. But do your customers feel the same way? They won’t unless you invest in consistently reliable and consistently excellent communication. Reality isn’t reality; perception is reality. If customers don’t hear about a recent release, in their world, it doesn’t exist. To better inform   users of our ongoing product polish and new feature releases, we started sending a monthly broadcast known as Release Notes. Consisting of a direct email and a   for posterity, Release Notes have served as our running recap of changes made to Help Scout; a single piece of the customer comms pie, to be sure, but an important one. Now a few months in, we can confidently say they’ve done their job. Better still, customers seem to really appreciate the effort. Instead of telling you how to start or conduct your own version of Release Notes, we’ll share a few of the questions we asked that helped get us to what we publish today. We’ve chosen to send Release Notes during the first week of every month. Consistency kindles its own sort of momentum, but it can also leave you feeling beholden to dates on a calendar. If you ever feel what you’re about to publish is mostly scraps with no main course, make the easy fix: don’t publish! Last month we launched  , spending the lion’s share of our time and effort bringing it to market, listening to customers, and making small improvements along the way. When it came time to publish Release Notes, we realized Plus was a centerpiece that made the other improvements feel like tacked-on topics. Since we had already sent   for Plus, we decided to skip the Release Notes.  how we’ve found a tiered approach useful to group product releases. Here’s a common way to group features: These are the obvious ones; your main concern will be how you nail the messaging and presentation. Things get interesting for Release Notes when you get into   and   territory—the smaller improvements that don’t demand a separate email, blog post, or in-app message but are worth getting in front of customers. To narrow this down and help us avoid selfish, company-centric communication, we have a brief set of guidelines to determine if a new release is worth writing about: The last thing we explore is what updates outside of the product may be worth mentioning in our Release Notes. If we have a truly customer-driven update to something like  , that may be worth including even though it isn’t related to a product change. Too many cooks can spoil the broth. We found we produced better Release Notes with less confusion when we reduced the total number of people involved. Today, our product marketer   is the project lead; she keeps everyone informed about the current status of releases, writes the first draft, and ensures everything is completed on time.   contributes feedback and copy suggestions for Mo’s draft, which she uses for the final version; a second set of eyes is important for a big broadcast to customers.   brings us home with visuals and animated GIFs, and he codes our final email. I share our process to encourage you to ask the following questions: This is tricky. Since this style of Release Notes is more marketing-oriented than a traditional changelog, we do like to make them engaging and fun to read. When you need to share important information, however, wit and charm cannot take precedence over clarity. To help avoid this, we live by the following: We also look to show instead of tell for important announcements.  , screenshots, and custom visuals may take more time to produce, but they save precious space in emails and can help make key points impossible to misunderstand. Let clarity be the reality check for all of the humor, puns, and personality you want to include. There’s no need to scrub them out completely, but clarity serves as a good compass to keep you from veering completely off course. An absence of product updates always reminds me of a poorly lit storefront: you may know you’re open for business, but nobody else does. To avoid building a reputation of dust and rust, let people know you’re continually improving your product by sharing the actual work you’ve been doing. As the saying goes, next to doing the right thing, the most important thing is to let people know you are.",Gregory Ciotti,4
2016-01-19,https://www.helpscout.net/blog/help-scout-iphone/,Introducing Help Scout for iPhone,"Your mailboxes have been mobilized! With Help Scout’s   you can check in on the queue, collaborate with your team, and get your customers the help they need, wherever you are. Working untethered from your desktop makes it easy to keep standards high and response times low. Start using intermissions to crush a few support conversations, instead of crushing candy. Now, let’s take a quick look at what you can do. 🚀 Do you plan on using Help Scout while on a week-long safari in Africa? Or maybe you want to send pictures to your customers after your triumphant climb atop Mount Kilimanjaro?  You   if you have a great data plan, but we’d recommend enjoying those moments instead. For life’s less exciting interludes, there are number of helpful features in the app that make supporting your customers on mobile a simple and painless process: Support is a discipline where “A-OK” can turn into “the sky is falling!” in an instant: your website comes crashing down on a Saturday; a new feature release floods your inbox with feedback; the holiday rush results in more orders than you can handle. There’s always a curveball or two headed to the support queue. Whatever the case, your team can sleep easy knowing they can check-in and spot red flags from their phone at any time. A fast reply never goes out of style. We’ve seen firsthand how many of our own   are due to quick, helpful answers that we sent to customers in minutes. You’ll be able to handle support emails from anywhere, turning random downtime into “getting things done” time. No doubt about it, customer support is a team sport. You’ll often run into a tricky problem that’s best handled by a another team member, or a persistent bug that should be passed on to your friendly neighborhood engineer. That’s why we built a few essential features to make teamwork a breeze. Plus, direct in-app email contact to our support team just in case you run into any trouble! We’ve got your back. The iPhone app is available to all Help Scout customers, whether you’re on the Standard or Free plan.   from the app store or head over to the   to learn more. Not a Help Scout customer? No worries. You can sign up for a free 15-day trial—there’s no credit card required and you’ll be set up in minutes.  . We hope you enjoy the app! As always, we’re looking forward to hearing your feedback.",Mo McKibbin,2
